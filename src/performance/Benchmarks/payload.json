{"operationName":"FeedGroupNestedClients","variables":{"threadCount":4,"replyCount":2,"sortRepliesBy":"UPVOTE_RANK_THEN_CREATED_AT","sortThreadsBy":"CREATED_AT","groupId":"eyJfdHlwZSI6Ikdyb3VwIiwiaWQiOiIzMzY3NzMxMyJ9","groupFeedType":"ALL","skipTopicName":true,"includeSenderBadges":true,"includeHiddenForNetworkInDiscovery":true,"includeViewerHasBookmarked":true,"includeOriginNetworkBadge":true,"includeSecondLevelBestReply":false,"includeGroupFeedLastVisitedAt":false,"includeGroupFeedLastVisitedIds":false,"includeVerifiedReply":true,"includeMessageContentSourceFile":true,"includeViewerShouldSeeResharePrompt":false},"extensions":{"yammerTreatments":{"version":"1","treatments":[{"project":"CrossPlatform","key":"SharePointVideoLinkPreviews","value":"true"},{"project":"CrossPlatform","key":"ServerSharePointWebLinks","value":"enabled"},{"project":"ClientForward","key":"MultiTenantOrganization","value":"true"},{"project":"YammerClients","key":"OfficeTopics","value":"true"},{"project":"CrossPlatform","key":"CommunityExperts","value":"enabled"},{"project":"ClientForward","key":"AdminMuteUser","value":"true"},{"project":"ClientForward","key":"AddDelegateAPIMigration","value":"true"},{"project":"ClientForward","key":"AdminRoleManagement","value":"true"},{"project":"ClientForward","key":"BackendGraphQLApiVNextRolloutProd25","value":"true"},{"project":"ClientForward","key":"BackendGraphQLApiVNextRolloutProd50","value":"true"},{"project":"ClientForward","key":"BackendGraphQLApiVNextRolloutProd100","value":"true"},{"project":"ClientForward","key":"BackendLiveEventFeedCaching","value":"true"},{"project":"ClientForward","key":"BackendStreamieCosmos","value":"true"},{"project":"ClientForward","key":"CampaignSashAvatar","value":"true"},{"project":"ClientForward","key":"CommunityInfoEdit","value":"true"},{"project":"ClientForward","key":"DelegateStorylineAccessAPIMigration","value":"true"},{"project":"ClientForward","key":"DraftSorting","value":"true"},{"project":"ClientForward","key":"EnableDeleteOptions","value":"true"},{"project":"ClientForward","key":"ExpertsCanSwitchPostType","value":"enabled"},{"project":"ClientForward","key":"GroupsFromGrouper","value":"true"},{"project":"ClientForward","key":"ImageCompressionWeb","value":"true"},{"project":"ClientForward","key":"MTOBadge","value":"true"},{"project":"ClientForward","key":"MTOBlendedInbox","value":"true"},{"project":"ClientForward","key":"MTOCampaigns","value":"true"},{"project":"ClientForward","key":"MTOGraphVNextResolvers","value":"true"},{"project":"ClientForward","key":"MultiTenantOrganization","value":"true"},{"project":"ClientForward","key":"PrivateRepliesEditPendingThreads","value":"true"},{"project":"ClientForward","key":"PrivateRepliesQnANotifications","value":"true"},{"project":"ClientForward","key":"RemoveDelegateAPIMigration","value":"true"},{"project":"ClientForward","key":"TeamsQnAPostAsModerator","value":"true"},{"project":"ClientForward","key":"ThirdPartyCookieFix","value":"true"},{"project":"ClientForward","key":"UserGroupsFromGrouper","value":"enabled"},{"project":"ClientForward","key":"NoWFMessageBodyInGroupMessageCreationResponse","value":"enabled"},{"project":"CrossPlatform","key":"DomainMigration","value":"true"},{"project":"CrossPlatform","key":"StorylineMediaPostGA","value":"true"},{"project":"CrossPlatform","key":"PrivateReplies","value":"true"}]}},"query":"query FeedGroupNestedClients($groupId: ID!, $threadCount: Int = 8, $replyCount: Int = 2, $secondLevelRepliesCount: Int = 0, $bestReplySecondLevelRepliesCount: Int = 0, $groupFeedType: GroupFeedType = ALL, $olderThan: String, $newerThan: String, $includeModerationState: Boolean = false, $skipBroadcasts: Boolean = false, $skipViewerIsFollowing: Boolean = false, $skipViewerLastSeenMessage: Boolean = false, $skipSeenByCount: Boolean = false, $skipShareCount: Boolean = false, $sortThreadsBy: GroupFeedThreadSortOrder, $sortRepliesBy: ThreadReplySortOrder = CREATED_AT, $includeThreadLevelAndParentId: Boolean = true, $skipTopicName: Boolean = false, $includeCurationState: Boolean = false, $includeSenderBadges: Boolean = false, $skipMessageParticipants: Boolean = false, $includeViewerHasBookmarked: Boolean = false, $includeThreadUpvoteInfo: Boolean = false, $includeOriginNetworkBadge: Boolean = false, $skipReactionMessageFields: Boolean = false, $includeAnnouncementNotificationTargetEntities: Boolean = false, $includeMessageContentSourceFile: Boolean = false, $includeSecondLevelBestReply: Boolean = false, $includeMyLeadersPinnedThreads: Boolean = false, $includeVerifiedReply: Boolean = false, $includeRecommendedTopLevelReplies: Boolean = false, $includeHiddenForNetworkInDiscovery: Boolean = false, $includeQuestionQueueState: Boolean = false, $includeGroupFeedLastVisitedAt: Boolean = false, $includeGroupFeedLastVisitedIds: Boolean = false, $includeViewerCanPrivateReply: Boolean = false, $includeViewerShouldSeeResharePrompt: Boolean = false, $skipTeamsMeetingTitle: Boolean = false, $requestContentInTargetLanguage: Boolean = false, $contentTargetLanguage: Locale = \"unset-language\") {\n  group: node(id: $groupId) {\n    ... on Group {\n      ...GroupFields\n      ...GroupFeedLastVisitedFields @include(if: $includeGroupFeedLastVisitedAt)\n      ...FeedGroupNestedThreads\n    }\n  }\n}\n\nfragment FeedGroupNestedThreads on Group {\n  feed {\n    threads(last: $threadCount, type: $groupFeedType, before: $olderThan, after: $newerThan, sortBy: $sortThreadsBy) {\n      ...FeedGroupNestedThreadList\n    }\n    pinnedThreads {\n      ...NestedThreadFieldsWithReplies\n    }\n    ...UnseenThreadIds\n  }\n}\n\nfragment FeedGroupNestedThreadList on GroupFeedThreadConnection {\n  realtimeChannelId\n  pageInfo {\n    ...PageInfoFields\n  }\n  edges {\n    cursor\n    sortKey\n    node {\n      ...NestedThreadFieldsWithReplies\n    }\n  }\n  telemetryContext {\n    ...TelemetryContextFields\n  }\n  sortedBy\n}\n\nfragment UnseenThreadIds on GroupFeed {\n  unseenThreads: groupUnseenCount(last: 40) {\n    hasMore\n    threads: unseenThreadsInfo {\n      id: threadId\n    }\n  }\n}\n\nfragment NestedThreadFieldsWithReplies on Thread {\n  topLevelReplies(last: $replyCount, sortBy: $sortRepliesBy) {\n    ...TopLevelReplyConnectionFields\n  }\n  bestReply {\n    ...BestReplyNestedFields\n  }\n  verifiedReply @include(if: $includeVerifiedReply) {\n    ...VerifiedReplyNestedFields\n  }\n  ...ThreadFields\n}\n\nfragment VerifiedReplyNestedFields on VerifiedReply {\n  secondLevelReplies(last: $bestReplySecondLevelRepliesCount) {\n    ...SecondLevelReplyConnectionFields\n  }\n}\n\nfragment SecondLevelReplyPaginationFields on SecondLevelReplyConnection {\n  pageInfo {\n    ...PageInfoFields\n  }\n  extendedPageInfo {\n    ...ExtendedReplyPageInfoFields\n  }\n}\n\nfragment SecondLevelReplyConnectionFields on SecondLevelReplyConnection {\n  ...SecondLevelReplyPaginationFields\n  edges {\n    ...SecondLevelReplyEdgeFields\n  }\n}\n\nfragment SecondLevelReplyEdgeFields on SecondLevelReplyEdge {\n  cursor\n  node {\n    ...MessageFields\n  }\n  viewerHasSeen\n}\n\nfragment ExtendedReplyPageInfoFields on ReplyConnectionExtendedPageInfo {\n  totalPreviousCount\n  totalUnseenPreviousCount\n  totalNextCount\n  totalUnseenNextCount\n}\n\nfragment BaseMessageFields on Message {\n  id\n  viewerMutationId\n  telemetryId\n  thread {\n    id\n  }\n  sender {\n    ...MessageSenderFields\n  }\n  senderBadges @include(if: $includeSenderBadges)\n  content {\n    ...MessageContentFields\n  }\n  body @skip(if: $requestContentInTargetLanguage) {\n    ...MessageBodyFields\n  }\n  announcementAudience\n  announcementAudienceIds\n  announcementNotificationTargets\n  availableTranslations @include(if: $requestContentInTargetLanguage)\n  title @skip(if: $requestContentInTargetLanguage)\n  language @skip(if: $requestContentInTargetLanguage)\n  languageSpecificContent(targetLanguage: $contentTargetLanguage) @include(if: $requestContentInTargetLanguage) {\n    body {\n      ...MessageBodyFields\n    }\n    title\n    language\n  }\n  createdAt\n  updatedAt\n  version\n  isEdited\n  viewerCanEdit\n  isDraft\n  scheduledPublishAt\n  isDeleted\n  viewerCanDelete\n  viewerCanShare\n  viewerHasUpvoted\n  ...MessageParticipantsFields @skip(if: $skipMessageParticipants)\n  isQuestion\n  isArticle\n  sharedMessage {\n    ...SharedMessageFields\n  }\n  hasDeletedSharedMessage\n  threadLevel @include(if: $includeThreadLevelAndParentId)\n  parentMessage @include(if: $includeThreadLevelAndParentId) {\n    id\n  }\n}\n\nfragment SharedMessageFields on Message {\n  __typename\n  id\n  sender {\n    ...MessageSenderFields\n  }\n  content {\n    ...MessageContentFields\n  }\n  body {\n    ...MessageBodyFields\n  }\n  title\n  language\n  attachments {\n    totalCount\n  }\n  headerImage {\n    ...ImageFileFields\n  }\n  createdAt\n  thread {\n    id\n    group {\n      ...GroupLinkFields\n    }\n    threadStarter {\n      id\n    }\n    seenByCount\n    shares {\n      totalCount\n    }\n    ...ThreadScopeFields\n    isVisibleInNetworkQuestionFeeds\n  }\n  isQuestion\n  isArticle\n  threadLevel @include(if: $includeThreadLevelAndParentId)\n  parentMessage @include(if: $includeThreadLevelAndParentId) {\n    id\n  }\n}\n\nfragment MessageFields on Message {\n  ...BaseMessageFields\n  ...FeaturedReactionMessageFields @skip(if: $skipReactionMessageFields)\n  featuredQuestionReplyUpvotes(first: 10) {\n    totalCount\n    edges {\n      node {\n        ...UserFields\n      }\n    }\n  }\n  ...AnnouncementNotificationTargetEntitiesFields @include(if: $includeAnnouncementNotificationTargetEntities)\n  viewerMutationId\n  attachments(first: 1000) {\n    totalCount\n    edges {\n      ...MessageAttachmentEdgeFields\n    }\n  }\n}\n\nfragment GroupLinkFields on Group {\n  id\n  displayName\n  isOfficial\n  isMultiTenantOrganizationGroup\n  officeUnifiedGroupId\n  telemetryId\n}\n\nfragment ThreadScopeFields on Thread {\n  scope {\n    __typename\n    ...TeamsMeetingThreadScopeFields\n    ...UserMomentThreadScopeFields\n    ...UserWallThreadScopeFields\n  }\n}\n\nfragment UserMomentThreadScopeFields on ThreadScope {\n  ... on UserMomentScope {\n    owner {\n      ...UserFields\n    }\n  }\n}\n\nfragment UserFields on User {\n  databaseId\n  telemetryId\n  id\n  officeUserId\n  network {\n    ...NetworkFields\n  }\n  displayName\n  email\n  jobTitle\n  isGuest\n  ...UserOriginNetwork @include(if: $includeOriginNetworkBadge)\n  ...UserAvatarFields\n  ...UserCampaignSashFields\n}\n\nfragment UserOriginNetwork on User {\n  originNetworkBadgeDisplayName\n  originNetworkId\n}\n\nfragment UserAvatarFields on User {\n  avatarUrlTemplate\n  hasDefaultAvatar\n}\n\nfragment UserCampaignSashFields on User {\n  campaignSash {\n    campaign {\n      id\n      sashImageUrl\n    }\n  }\n}\n\nfragment NetworkFields on Network {\n  id\n  displayName\n  permalink\n}\n\nfragment UserWallThreadScopeFields on ThreadScope {\n  ... on UserWallScope {\n    owner {\n      ...UserFields\n    }\n  }\n}\n\nfragment TeamsMeetingThreadScopeFields on ThreadScope {\n  ... on TeamsMeetingScope {\n    teamsMeeting {\n      ...TeamsMeetingReferenceFields\n    }\n  }\n}\n\nfragment TeamsMeetingReferenceFields on TeamsMeeting {\n  id\n  title @skip(if: $skipTeamsMeetingTitle)\n}\n\nfragment AnnouncementNotificationTargetEntitiesFields on Message {\n  id\n  announcementNotificationTargetEntities(first: 100) {\n    ...AnnouncementNotificationTargetEntityFields\n  }\n}\n\nfragment AnnouncementNotificationTargetEntityFields on AnnouncementNotificationTargetConnection {\n  edges {\n    ...AnnouncementNotificationTargetEntityEdgeFields\n  }\n}\n\nfragment AnnouncementNotificationTargetEntityEdgeFields on AnnouncementNotificationTargetEdge {\n  node {\n    __typename\n    ...UserFields\n    ...OfficeGroupFields\n    ...AudienceFields\n    ...TargetingRuleFields\n  }\n}\n\nfragment TargetingRuleFields on TargetingRule {\n  targetingRuleId: id\n  targetingRuleDisplayName: displayName\n  expression {\n    ... on TargetingCompositeExpression {\n      expressions {\n        filterType\n        filterValues {\n          displayName\n          filterValueId\n          type\n        }\n        operator\n      }\n      operator\n    }\n  }\n}\n\nfragment OfficeGroupFields on OfficeGroup {\n  id\n  displayName\n  memberCount\n  type\n  officeGroupEmail: email\n}\n\nfragment AudienceFields on Audience {\n  id\n  displayName\n  isDefaultAudience\n  totalUserCount\n  officeId\n}\n\nfragment FeaturedReactionMessageConnectionFields on MessageReactionConnection {\n  edges {\n    node {\n      ...UserReactionFields\n    }\n  }\n}\n\nfragment FeaturedReactionMessageFields on Message {\n  reactionsConnection {\n    totalCount\n    ...reactionCounts\n  }\n  featuredReactions(first: 8) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  likeFeaturedReactions: featuredReactions(first: 8, filterByReaction: LIKE) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  loveFeaturedReactions: featuredReactions(first: 8, filterByReaction: LOVE) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  laughFeaturedReactions: featuredReactions(first: 8, filterByReaction: LAUGH) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  celebrateFeaturedReactions: featuredReactions(first: 8, filterByReaction: CELEBRATE) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  thankFeaturedReactions: featuredReactions(first: 8, filterByReaction: THANK) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  sadFeaturedReactions: featuredReactions(first: 8, filterByReaction: SAD) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  agreeFeaturedReactions: featuredReactions(first: 8, filterByReaction: AGREE) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  angryFeaturedReactions: featuredReactions(first: 8, filterByReaction: ANGRY) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  brainFeaturedReactions: featuredReactions(first: 8, filterByReaction: BRAIN) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  bullseyeFeaturedReactions: featuredReactions(first: 8, filterByReaction: BULLSEYE) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  confirmedFeaturedReactions: featuredReactions(first: 8, filterByReaction: CONFIRMED) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  cryingFeaturedReactions: featuredReactions(first: 8, filterByReaction: CRYING) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  excitedFeaturedReactions: featuredReactions(first: 8, filterByReaction: EXCITED) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  goofyFeaturedReactions: featuredReactions(first: 8, filterByReaction: GOOFY) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  happyFeaturedReactions: featuredReactions(first: 8, filterByReaction: HAPPY) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  heartBrokenFeaturedReactions: featuredReactions(first: 8, filterByReaction: HEART_BROKEN) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  intenseLaughFeaturedReactions: featuredReactions(first: 8, filterByReaction: INTENSE_LAUGH) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  medalFeaturedReactions: featuredReactions(first: 8, filterByReaction: MEDAL) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  mindBlownFeaturedReactions: featuredReactions(first: 8, filterByReaction: MIND_BLOWN) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  praiseFeaturedReactions: featuredReactions(first: 8, filterByReaction: PRAISE) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  scaredFeaturedReactions: featuredReactions(first: 8, filterByReaction: SCARED) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  shockedFeaturedReactions: featuredReactions(first: 8, filterByReaction: SHOCKED) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  sillyFeaturedReactions: featuredReactions(first: 8, filterByReaction: SILLY) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  smileFeaturedReactions: featuredReactions(first: 8, filterByReaction: SMILE) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  starStruckFeaturedReactions: featuredReactions(first: 8, filterByReaction: STAR_STRUCK) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  supportFeaturedReactions: featuredReactions(first: 8, filterByReaction: SUPPORT) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  surprisedFeaturedReactions: featuredReactions(first: 8, filterByReaction: SURPRISED) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  takingNotesFeaturedReactions: featuredReactions(first: 8, filterByReaction: TAKING_NOTES) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  thinkingFeaturedReactions: featuredReactions(first: 8, filterByReaction: THINKING) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  watchingFeaturedReactions: featuredReactions(first: 8, filterByReaction: WATCHING) {\n    ...FeaturedReactionMessageConnectionFields\n  }\n  viewerHasLiked\n  viewerReaction\n}\n\nfragment reactionCounts on MessageReactionConnection {\n  likeCount: count(reaction: LIKE)\n  loveCount: count(reaction: LOVE)\n  laughCount: count(reaction: LAUGH)\n  thankCount: count(reaction: THANK)\n  celebrateCount: count(reaction: CELEBRATE)\n  sadCount: count(reaction: SAD)\n  agreeCount: count(reaction: AGREE)\n  angryCount: count(reaction: ANGRY)\n  brainCount: count(reaction: BRAIN)\n  bullseyeCount: count(reaction: BULLSEYE)\n  confirmedCount: count(reaction: CONFIRMED)\n  cryingCount: count(reaction: CRYING)\n  excitedCount: count(reaction: EXCITED)\n  goofyCount: count(reaction: GOOFY)\n  happyCount: count(reaction: HAPPY)\n  heartBrokenCount: count(reaction: HEART_BROKEN)\n  intenseLaughCount: count(reaction: INTENSE_LAUGH)\n  medalCount: count(reaction: MEDAL)\n  mindBlownCount: count(reaction: MIND_BLOWN)\n  praiseCount: count(reaction: PRAISE)\n  scaredCount: count(reaction: SCARED)\n  shockedCount: count(reaction: SHOCKED)\n  sillyCount: count(reaction: SILLY)\n  smileCount: count(reaction: SMILE)\n  starStruckCount: count(reaction: STAR_STRUCK)\n  supportCount: count(reaction: SUPPORT)\n  surprisedCount: count(reaction: SURPRISED)\n  takingNotesCount: count(reaction: TAKING_NOTES)\n  thinkingCount: count(reaction: THINKING)\n  watchingCount: count(reaction: WATCHING)\n}\n\nfragment UserReactionFields on User {\n  ...UserFields\n  reactionAccentColor\n}\n\nfragment MessageAttachmentEdgeFields on MessageAttachmentEdge {\n  node {\n    __typename\n    ...FileFields\n    ...ImageFileFields\n    ...VideoFileFields\n    ...WebLinkFields\n    ...WebImageFields\n    ...WebVideoFields\n    ...SharePointFileLinkFields\n    ...SharePointVideoLinkFields\n    ...SharePointWebLinkFields\n  }\n}\n\nfragment SharePointWebLinkFields on SharePointWebLink {\n  __typename\n  id\n  url\n  title\n  description\n  linkType\n  mediumAuthenticatedPreviewImage\n  smallAuthenticatedPreviewImage\n}\n\nfragment SharePointVideoLinkFields on SharePointVideoLink {\n  __typename\n  id\n  url\n  title\n  mimeType\n  description\n  previewImage\n  streamUrlProvider\n  embeddablePreviewUrl\n  videoHeight\n  videoWidth\n}\n\nfragment SharePointFileLinkFields on SharePointFileLink {\n  __typename\n  id\n  url\n  embeddablePreviewUrl\n  title\n  mimeType\n  displayName\n  description\n  previewImage\n}\n\nfragment FileFields on File {\n  __typename\n  id\n  displayName\n  fileDescription: description\n  fullPageEditorUrl\n  mimeType\n  downloadLink\n  previewImage\n  embeddablePreviewUrl\n  databaseId\n  state\n  group {\n    ...GroupFields\n  }\n}\n\nfragment ImageFileFields on ImageFile {\n  __typename\n  id\n  displayName\n  fileDescription: description\n  downloadLink\n  width\n  height\n  smallImage\n  mediumImage\n  largeImage\n  databaseId\n  state\n  storageProvider\n}\n\nfragment VideoFileFields on VideoFile {\n  __typename\n  id\n  displayName\n  fileDescription: description\n  downloadLink\n  previewImage\n  databaseId\n  state\n  width\n  height\n  group {\n    ...GroupFields\n  }\n  azureVideoSource {\n    streamUrlProvider\n    transcodingStatus\n  }\n  sharePointVideoSource {\n    embeddablePreviewUrl\n    streamUrlProvider\n  }\n}\n\nfragment GroupFields on Group {\n  databaseId\n  telemetryId\n  id\n  officeUnifiedGroupId\n  network {\n    id\n  }\n  ...GroupAvatarFields\n  displayName\n  description\n  isExternal\n  isOfficial\n  guestsCount\n  threadStarterSmallFileUploadUrl\n  isMultiTenantOrganizationGroup\n  isMoveThreadToThisGroupRestricted\n}\n\nfragment GroupAvatarFields on Group {\n  avatarUrlTemplate\n  hasDefaultAvatar\n}\n\nfragment WebVideoFields on WebVideo {\n  __typename\n  id\n  url\n  title\n  description\n  previewImage\n  embedUrl\n  provider\n}\n\nfragment WebLinkFields on WebLink {\n  __typename\n  id\n  url\n  title\n  description\n  previewImage\n}\n\nfragment WebImageFields on WebImage {\n  __typename\n  id\n  url\n  title\n  description\n  previewImage\n  nonAnimatedImageUrl\n}\n\nfragment MessageParticipantsFields on Message {\n  id\n  messageParticipants: participants(first: 100) {\n    ...MessageParticipantList\n  }\n}\n\nfragment MessageParticipantList on MessageParticipantConnection {\n  totalCount\n  pageInfo {\n    ...PageInfoFields\n  }\n  edges {\n    isTagged\n    isNotified\n    node {\n      ...UserFields\n    }\n  }\n}\n\nfragment PageInfoFields on PageInfo {\n  hasPreviousPage\n  startCursor\n  hasNextPage\n  endCursor\n}\n\nfragment MessageBodyFields on MessageBody {\n  serializedContentState\n  references {\n    __typename\n    ... on User {\n      ...UserFields\n    }\n    ... on Group {\n      ...GroupFields\n    }\n    ... on Campaign {\n      ...CampaignReferenceFields\n    }\n  }\n}\n\nfragment CampaignReferenceFields on Campaign {\n  id\n  telemetryId\n  hashTags\n  color\n  state\n  isOfficial\n  description\n  scope {\n    ...CampaignScopeFields\n  }\n}\n\nfragment CampaignScopeFields on CampaignScope {\n  __typename\n  ...CampaignGroupScopeFields\n  ...CampaignNetworkScopeFields\n  ...CampaignMultiTenantOrganizationScopeFields\n}\n\nfragment CampaignMultiTenantOrganizationScopeFields on CampaignScope {\n  ... on CampaignMultiTenantOrganizationScope {\n    isMultiTenantOrganizationScopedCampaign\n  }\n}\n\nfragment CampaignNetworkScopeFields on CampaignScope {\n  ... on CampaignNetworkScope {\n    isNetworkScopedCampaign\n  }\n}\n\nfragment CampaignGroupScopeFields on CampaignScope {\n  ... on CampaignGroupScope {\n    group {\n      ...CampaignGroupReferenceFields\n    }\n  }\n}\n\nfragment CampaignGroupReferenceFields on Group {\n  id\n}\n\nfragment MessageContentFields on MessageContent {\n  __typename\n  ...AnnouncementMessageContentFields\n  ...PollMessageContentFields\n  ...PraiseMessageContentFields\n  ...AddedParticipantSystemMessageContentFields\n  ...CreatedGroupSystemMessageContentFields\n  ...MovedGroupThreadToGroupSystemMessageContentFields\n  ...RemovedParticipantSystemMessageContentFields\n  ...MovedDirectMessageToGroupSystemMessageContentFields\n  ...JoinedNetworkSystemMessageContentFields\n  ...DisabledForeignNetworksSystemMessageContentFields\n  ...RemovedForeignNetworkSystemMessageContentFields\n  ...ClosedPollVotingSystemMessageContentFields\n  ...ReopenedPollVotingSystemMessageContentFields\n  ...CreatedNetworkSystemMessageContentFields\n  ...MarkedMessageAsQuestionSystemMessageContentFields\n  ...UnmarkedMessageAsQuestionSystemMessageContentFields\n}\n\nfragment PraiseMessageContentFields on PraiseMessageContent {\n  __typename\n  badge\n  users {\n    ...UserFields\n  }\n}\n\nfragment PollMessageContentFields on PollMessageContent {\n  __typename\n  options {\n    ...PollOptionFields\n  }\n  isPollClosed\n  viewerCanClosePoll\n}\n\nfragment PollOptionFields on PollOption {\n  displayName\n  index\n  viewerHasSelected\n  voteCount\n}\n\nfragment AddedParticipantSystemMessageContentFields on AddedParticipantSystemMessageContent {\n  __typename\n  users {\n    __typename\n    ...UserFields\n  }\n}\n\nfragment CreatedGroupSystemMessageContentFields on CreatedGroupSystemMessageContent {\n  __typename\n  group {\n    __typename\n    ...GroupFields\n  }\n}\n\nfragment MovedGroupThreadToGroupSystemMessageContentFields on MovedGroupThreadToGroupSystemMessageContent {\n  __typename\n  moveSourceGroupAccess {\n    __typename\n    viewerHasAccess\n    group {\n      __typename\n      ...GroupFields\n    }\n  }\n  moveDestinationGroupAccess {\n    __typename\n    viewerHasAccess\n    group {\n      __typename\n      ...GroupFields\n    }\n  }\n}\n\nfragment RemovedParticipantSystemMessageContentFields on RemovedParticipantSystemMessageContent {\n  __typename\n  users {\n    __typename\n    ...UserFields\n  }\n}\n\nfragment MovedDirectMessageToGroupSystemMessageContentFields on MovedDirectMessageToGroupSystemMessageContent {\n  __typename\n  group {\n    __typename\n    ...GroupFields\n  }\n}\n\nfragment JoinedNetworkSystemMessageContentFields on JoinedNetworkSystemMessageContent {\n  __typename\n  network {\n    __typename\n    ...NetworkFields\n  }\n  user {\n    __typename\n    ...UserFields\n  }\n}\n\nfragment DisabledForeignNetworksSystemMessageContentFields on DisabledForeignNetworksSystemMessageContent {\n  __typename\n  network {\n    __typename\n    ...NetworkFields\n  }\n}\n\nfragment RemovedForeignNetworkSystemMessageContentFields on RemovedForeignNetworkSystemMessageContent {\n  __typename\n  network {\n    __typename\n    ...NetworkFields\n  }\n}\n\nfragment ClosedPollVotingSystemMessageContentFields on ClosedPollVotingSystemMessageContent {\n  __typename\n  user {\n    __typename\n    ...UserFields\n  }\n}\n\nfragment ReopenedPollVotingSystemMessageContentFields on ReopenedPollVotingSystemMessageContent {\n  __typename\n  user {\n    __typename\n    ...UserFields\n  }\n}\n\nfragment CreatedNetworkSystemMessageContentFields on CreatedNetworkSystemMessageContent {\n  __typename\n  network {\n    __typename\n    ...NetworkFields\n  }\n}\n\nfragment MarkedMessageAsQuestionSystemMessageContentFields on MarkedMessageAsQuestionSystemMessageContent {\n  __typename\n  user {\n    __typename\n    ...UserFields\n  }\n}\n\nfragment UnmarkedMessageAsQuestionSystemMessageContentFields on UnmarkedMessageAsQuestionSystemMessageContent {\n  __typename\n  user {\n    __typename\n    ...UserFields\n  }\n}\n\nfragment AnnouncementMessageContentFields on AnnouncementMessageContent {\n  __typename\n  title\n}\n\nfragment MessageSenderFields on MessageSender {\n  __typename\n  ... on User {\n    ...UserFields\n  }\n  ... on Bot {\n    ...BotFields\n  }\n  ... on AnonymousUser {\n    ...AnonymousUserFields\n  }\n  ... on ModeratorUser {\n    ...ModeratorUserFields\n  }\n}\n\nfragment ModeratorUserFields on ModeratorUser {\n  id\n  sender {\n    ...UserFields\n  }\n}\n\nfragment AnonymousUserFields on AnonymousUser {\n  id\n}\n\nfragment BotFields on Bot {\n  id\n  displayName\n  avatarUrlTemplate\n}\n\nfragment BestReplyNestedFields on BestReply {\n  secondLevelReplies(last: $bestReplySecondLevelRepliesCount) {\n    ...SecondLevelReplyConnectionFields\n  }\n  viewerHasSeen\n}\n\nfragment TopLevelReplyPaginationFields on TopLevelReplyConnection {\n  pageInfo {\n    ...PageInfoFields\n  }\n  extendedPageInfo {\n    ...ExtendedReplyPageInfoFields\n  }\n  sortedBy\n  totalCount\n}\n\nfragment TopLevelReplyEdgeCommonFields on TopLevelReplyEdge {\n  cursor\n  node {\n    ...MessageFields\n  }\n  viewerHasSeen\n}\n\nfragment ThreadFields on Thread {\n  id\n  databaseId\n  telemetryId\n  realtimeChannelId\n  messageReactionsRealtimeChannelId\n  network {\n    id\n  }\n  group {\n    ...GroupFields\n  }\n  hasAttachments\n  hiddenForNetworkInDiscovery @include(if: $includeHiddenForNetworkInDiscovery)\n  shares(first: 1) @skip(if: $skipShareCount) {\n    totalCount\n  }\n  viewerHasUnreadMessages\n  bestReply {\n    ...BestReplyFields\n  }\n  secondLevelBestReply @include(if: $includeSecondLevelBestReply) {\n    ...SecondLevelBestReplyFields\n  }\n  recommendedTopLevelReplies(count: 2) @include(if: $includeRecommendedTopLevelReplies) {\n    ...RecommendedTopLevelReplyFields\n  }\n  verifiedReply @include(if: $includeVerifiedReply) {\n    ...VerifiedReplyFields\n  }\n  viewerCanAddOrRemoveTopic\n  viewerCanBookmark\n  viewerCanClose\n  viewerCanDelete\n  viewerCanHideForNetworkInDiscovery @include(if: $includeHiddenForNetworkInDiscovery)\n  viewerCanMarkBestReply\n  viewerCanMarkVerifiedReply @include(if: $includeVerifiedReply)\n  viewerCanPin\n  viewerCanPinInMyLeaders @include(if: $includeMyLeadersPinnedThreads)\n  viewerCanPromote\n  viewerCanMarkAsQuestion\n  viewerCanMove\n  viewerCanReply\n  viewerCanPrivateReply @include(if: $includeViewerCanPrivateReply)\n  viewerCanAccessThreadActivity\n  viewerIsFollowing @skip(if: $skipViewerIsFollowing)\n  viewerHasSeenThreadStarter\n  viewerHasBookmarked @include(if: $includeViewerHasBookmarked)\n  viewerHasUpvoted @include(if: $includeThreadUpvoteInfo)\n  viewerLastSeenMessage @skip(if: $skipViewerLastSeenMessage) {\n    id\n  }\n  viewerMutationId\n  threadStarter {\n    ...MessageWithModerationStateFields\n    headerImage {\n      ...ImageFileFields\n    }\n    messageContentSourceFile @include(if: $includeMessageContentSourceFile) {\n      ...FileFields\n    }\n  }\n  replySmallFileUploadUrl\n  participants(first: 100) {\n    ...ThreadParticipantList\n  }\n  updatedAt\n  upvoteCount @include(if: $includeThreadUpvoteInfo)\n  topics(first: 100) {\n    ...ThreadTopicList\n  }\n  seenByCount @skip(if: $skipSeenByCount)\n  isAnnouncement\n  isClosed\n  isDirectMessage\n  isForcedNotification\n  broadcast @skip(if: $skipBroadcasts) {\n    ...BroadcastFields\n  }\n  promotionEndTime\n  markSeenKey\n  wallOwner {\n    ...UserFields\n  }\n  ...ThreadScopeFields\n  isVisibleInNetworkQuestionFeeds\n  ...ThreadQuestionQueueState @include(if: $includeQuestionQueueState)\n  viewerShouldSeeResharePrompt @include(if: $includeViewerShouldSeeResharePrompt)\n}\n\nfragment ThreadQuestionQueueState on Thread {\n  isQueued\n  answerState\n}\n\nfragment VerifiedReplyFields on VerifiedReply {\n  message {\n    ...MessageFields\n  }\n  markedBy {\n    ...UserFields\n  }\n  markedAt\n}\n\nfragment RecommendedTopLevelReplyFields on RecommendedTopLevelReplyConnection {\n  edges {\n    node {\n      ...MessageFields\n    }\n    secondLevelReplies(last: 1) {\n      pageInfo {\n        ...PageInfoFields\n      }\n      extendedPageInfo {\n        ...ExtendedReplyPageInfoFields\n      }\n      ...SecondLevelReplyConnectionFields\n    }\n    viewerHasSeen\n  }\n}\n\nfragment SecondLevelBestReplyFields on SecondLevelBestReply {\n  message {\n    ...MessageFields\n  }\n  markedBy {\n    ...UserFields\n  }\n}\n\nfragment BestReplyFields on BestReply {\n  message {\n    ...MessageFields\n  }\n  markedBy {\n    ...UserFields\n  }\n}\n\nfragment BroadcastFields on Broadcast {\n  id\n  broadcastEventType\n  organizer {\n    ...UserFields\n  }\n  network {\n    id\n  }\n  title\n  description\n  isDiscoverable\n  startAt\n  endAt\n  isEmbeddable\n  isPublished\n  isThreadStarterRestricted\n  isThreadStarterAdminModerated\n  isReplyToConversationEnabled\n  viewerCanStartThread\n  presenters {\n    ...UserFields\n  }\n  producers {\n    ...UserFields\n  }\n  editLink\n  metricsLink\n  productionEmbedUrl\n  isGroupCalendarInviteSent\n  realtimeChannelId\n  createdAt\n  calendarDownloadUrl\n  teamsJoinLink\n  teamsLiveEventType\n  teamsVideoEmbedUrl\n  recordingUrl\n  optionsLink\n  ingest {\n    ...BroadcastIngestFields\n  }\n  rtmpSettings {\n    ...BroadcastRtmpSettingsFields\n  }\n  ...BroadcastStatusFields\n}\n\nfragment BroadcastIngestFields on Ingest {\n  urls {\n    ...BroadcastIngestUrlFields\n  }\n}\n\nfragment BroadcastIngestUrlFields on IngestUrl {\n  url\n  protocol\n  type\n}\n\nfragment BroadcastRtmpSettingsFields on BroadcastRtmpSettings {\n  isSslEnabled\n  rtmpIngestUrl\n  rtmpKey\n  rtmpsIngestUrl\n}\n\nfragment BroadcastStatusFields on Broadcast {\n  broadcastId\n  group {\n    ...GroupFields\n    ...GroupCoverImageFields\n  }\n  status\n  isCancelled\n}\n\nfragment GroupCoverImageFields on Group {\n  coverImageUrlTemplate\n  hasDefaultCoverImage\n  defaultCoverImageUrlTemplate\n}\n\nfragment ThreadTopicList on ThreadTopicConnection {\n  edges {\n    node {\n      ...TopicFields\n    }\n  }\n}\n\nfragment TopicFields on Topic {\n  id\n  displayName @skip(if: $skipTopicName)\n  curationState @include(if: $includeCurationState)\n  databaseId\n  officeTopicId\n  telemetryId\n}\n\nfragment ThreadParticipantList on ThreadParticipantConnection {\n  pageInfo {\n    ...PageInfoFields\n  }\n  edges {\n    node {\n      ...UserFields\n    }\n  }\n  totalCount\n}\n\nfragment MessageWithModerationStateFields on Message {\n  ...MessageFields\n  moderationState @include(if: $includeModerationState)\n}\n\nfragment TopLevelReplyConnectionFields on TopLevelReplyConnection {\n  ...TopLevelReplyPaginationFields\n  edges {\n    ...TopLevelReplyEdgeFields\n  }\n}\n\nfragment TopLevelReplyEdgeFields on TopLevelReplyEdge {\n  ...TopLevelReplyEdgeCommonFields\n  secondLevelReplies(last: $secondLevelRepliesCount) {\n    ...SecondLevelReplyConnectionFields\n  }\n}\n\nfragment TelemetryContextFields on FeedThreadTelemetryContext {\n  type\n  subtype\n  telemetryId\n}\n\nfragment GroupFeedLastVisitedFields on Group {\n  id\n  viewerLastVisitedAt\n  viewerLastVisitMessage @include(if: $includeGroupFeedLastVisitedIds) {\n    lastVisitMessageId: id\n    thread {\n      lastVisitThreadId: id\n    }\n  }\n  lastMessageAt\n  lastMessage @include(if: $includeGroupFeedLastVisitedIds) {\n    lastMessageId: id\n    thread {\n      lastThreadId: id\n    }\n  }\n}\n"}